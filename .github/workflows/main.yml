name: Deploy to AWS Spot Instances

on:
  push:
    branches:
      - main  # Adjust this as necessary for your workflow

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Request EC2 Spot Instance
      id: request-spot
      run: |
        INSTANCE_ID=$(aws ec2 request-spot-instances \
          --spot-price "0.03" \
          --instance-count 1 \
          --type "one-time" \
          --launch-specification file://.github/workflows/spot-instance-spec.json \
          --query 'SpotInstanceRequests[0].InstanceId' \
          --output text)
        echo "::set-output name=INSTANCE_ID::$INSTANCE_ID"
      
    - name: Wait for Instance to Run
      run: |
        aws ec2 wait instance-running --instance-ids ${{ steps.request-spot.outputs.INSTANCE_ID }}
        INSTANCE_PUBLIC_IP=$(aws ec2 describe-instances \
          --instance-ids ${{ steps.request-spot.outputs.INSTANCE_ID }} \
          --query 'Reservations[0].Instances[0].PublicIpAddress' \
          --output text)
        echo "Instance Public IP: $INSTANCE_PUBLIC_IP"
        echo "INSTANCE_PUBLIC_IP=$INSTANCE_PUBLIC_IP" >> $GITHUB_ENV

    - name: Deploy Code to Instance
      run: |
        scp -o StrictHostKeyChecking=no -r * ec2-user@${{ env.INSTANCE_PUBLIC_IP }}:/var/www/html
      env:
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}

    - name: Cleanup Spot Request
      if: always()
      run: |
        aws ec2 cancel-spot-instance-requests --spot-instance-request-ids ${{ steps.request-spot.outputs.SPOT_REQUEST_ID }}
